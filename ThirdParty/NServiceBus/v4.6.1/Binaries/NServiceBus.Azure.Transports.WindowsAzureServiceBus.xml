<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NServiceBus.Azure.Transports.WindowsAzureServiceBus</name>
    </assembly>
    <members>
        <member name="T:NServiceBus.Azure.Transports.WindowsAzureServiceBus.ICreateSubscriptionClients">
            <summary>
            
            </summary>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.ICreateSubscriptionClients.Create(NServiceBus.Address,System.Type)">
            <summary>
            
            </summary>
            <param name="address"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.ICreateSubscriptionClients.Create(System.Type,NServiceBus.Address,System.String)">
            <summary>
            
            </summary>
            <param name="eventType"></param>
            <param name="topic"></param>
            <param name="subscriptionname"></param>
            <returns></returns>
        </member>
        <member name="T:NServiceBus.Azure.Transports.WindowsAzureServiceBus.ICreateTopicClients">
            <summary>
            
            </summary>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.ICreateTopicClients.Create(NServiceBus.Address)">
            <summary>
            
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="T:NServiceBus.Azure.Transports.WindowsAzureServiceBus.ICreateQueueClients">
            <summary>
            
            </summary>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.ICreateQueueClients.Create(NServiceBus.Address)">
            <summary>
            
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="T:NServiceBus.Azure.Transports.WindowsAzureServiceBus.QueueAutoCreation">
            <summary>
            Makes sure that all queues are created
            </summary>
        </member>
        <member name="T:NServiceBus.AzureServiceBus">
            <summary>
            Transport definition for WindowsAzureServiceBus    
            </summary>
        </member>
        <member name="T:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultIssuerName">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultLockDuration">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultMaxSizeInMegabytes">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultRequiresDuplicateDetection">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultRequiresSession">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultDefaultMessageTimeToLive">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultEnableDeadLetteringOnMessageExpiration">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.EnableDeadLetteringOnFilterEvaluationExceptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultDuplicateDetectionHistoryTimeWindow">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultMaxDeliveryCount">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultEnableBatchedOperations">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultQueuePerInstance">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultBackoffTimeInSeconds">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultServerWaitTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultConnectivityMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultConnectionString">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultBatchSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusDefaults.DefaultEnablePartitioning">
            <summary>
            
            </summary>
        </member>
        <member name="T:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusDequeueStrategy">
            <summary>
            Azure service bus implementation if <see cref="T:NServiceBus.Transports.IDequeueMessages"/>.
            </summary>
        </member>
        <member name="F:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusDequeueStrategy.CreateNotifier">
            <summary>
            
            </summary>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusDequeueStrategy.Init(NServiceBus.Address,NServiceBus.Unicast.Transport.TransactionSettings,System.Func{NServiceBus.TransportMessage,System.Boolean},System.Action{NServiceBus.TransportMessage,System.Exception})">
            <summary>
            Initializes the <see cref="T:NServiceBus.Transports.IDequeueMessages"/>.
            </summary>
            <param name="address">The address to listen on.</param>
            <param name="transactionSettings">The <see cref="T:NServiceBus.Unicast.Transport.TransactionSettings"/> to be used by <see cref="T:NServiceBus.Transports.IDequeueMessages"/>.</param>
            <param name="tryProcessMessage">Called when a message has been dequeued and is ready for processing.</param>
            <param name="endProcessMessage">Needs to be called by <see cref="T:NServiceBus.Transports.IDequeueMessages"/> after the message has been processed regardless if the outcome was successful or not.</param>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusDequeueStrategy.Start(System.Int32)">
            <summary>
            Starts the dequeuing of message using the specified <paramref name="maximumConcurrencyLevel"/>.
            </summary>
            <param name="maximumConcurrencyLevel">Indicates the maximum concurrency level this <see cref="T:NServiceBus.Transports.IDequeueMessages"/> is able to support.</param>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusDequeueStrategy.Stop">
            <summary>
                Stops the dequeuing of messages.
            </summary>
        </member>
        <member name="T:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusMessageQueueSender">
            <summary>
            
            </summary>
        </member>
        <member name="T:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusQueueNotifier">
            <summary>
            
            </summary>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusQueueNotifier.Start(NServiceBus.Address,System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary>
            
            </summary>
            <param name="address"></param>
            <param name="tryProcessMessage"></param>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusQueueNotifier.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusQueueNotifier.QueueClientCreator">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusQueueNotifier.ServerWaitTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusQueueNotifier.BatchSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusQueueNotifier.BackoffTimeInSeconds">
            <summary>
            
            </summary>
        </member>
        <member name="T:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusSubscriptionNotifier">
            <summary>
            
            </summary>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusSubscriptionNotifier.Start(NServiceBus.Address,System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary>
            
            </summary>
            <param name="address"></param>
            <param name="tryProcessMessage"></param>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusSubscriptionNotifier.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusSubscriptionNotifier.ServerWaitTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusSubscriptionNotifier.BatchSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusSubscriptionNotifier.BackoffTimeInSeconds">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusSubscriptionNotifier.SubscriptionClientCreator">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusSubscriptionNotifier.EventType">
            <summary>
            
            </summary>
        </member>
        <member name="T:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusTopicPublisher">
            <summary>
            
            </summary>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusTopicSubscriptionManager.Subscribe(System.Type,NServiceBus.Address)">
            <summary>
            
            </summary>
            <param name="eventType"></param>
            <param name="original"></param>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusTopicSubscriptionManager.Unsubscribe(System.Type,NServiceBus.Address)">
            <summary>
            
            </summary>
            <param name="eventType"></param>
            <param name="original"></param>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusTopicSubscriptionManager.GetAddressesForMessageType(System.Type)">
            <summary>
            Gets the destination address For a message type.
            </summary>
            <param name="messageType">The message type to get the destination for.</param>
            <returns>The address of the destination associated with the message type.</returns>
        </member>
        <member name="P:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServiceBusTopicSubscriptionManager.SubscriptionCreator">
            <summary>
            
            </summary>
        </member>
        <member name="T:NServiceBus.Azure.Transports.WindowsAzureServiceBus.BrokeredMessageExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.BrokeredMessageExtensions.SafeComplete(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:NServiceBus.Azure.Transports.WindowsAzureServiceBus.BrokeredMessageExtensions.SafeAbandon(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="T:NServiceBus.Azure.Transports.WindowsAzureServiceBus.AzureServicebusSubscriptionClientCreator">
            <summary>
            
            </summary>
        </member>
        <member name="T:NServiceBus.Transports.ICreateTopics">
            <summary>
            
            </summary>
        </member>
        <member name="M:NServiceBus.Transports.ICreateTopics.CreateIfNecessary(NServiceBus.Address)">
            <summary>
            
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
    </members>
</doc>
